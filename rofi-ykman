#!/usr/bin/env bash

# rofi-ykman
# YubiKey OATH utility

#2019 nukeop

print_usage() {
    echo "Usage: rofi-ykman [command]"
    echo
    echo "Commands:"
    echo "  clipboard   Copy the code to the clipboard. (default)"
    echo "  type        Type the code."
    echo
}

notify() {
    if hash notify-send 2>/dev/null
    then
        notify-send "rofi-ykman" "$1" -a "rofi-ykman"
    fi
}

choose_yubikey() {
    yubikeys=$(ykman list)

    if [[ "$yubikeys" = "" ]]
    then
        notify "YubiKey not detected."
        exit 1
    fi

    if [[ $(wc -l <<< "$yubikeys") > 1 ]]
    then
        yubikey=$(echo "$yubikeys" | rofi -dmenu -i -p "Select YubiKey")
        if [ $? -eq 1 ]
        then
            return 2
        fi
    else
        yubikey=$yubikeys
    fi
    serial=$(echo $yubikey | grep -oP 'Serial: \K\d+')
    echo $serial
}

clipboard () {
    if [ $XDG_SESSION_TYPE == "wayland" ]
    then
        wl-copy
    else
        xclip -selection clipboard
    fi
}

type () {
    if [ $XDG_SESSION_TYPE == "wayland" ]
    then
        wtype -
    else
        xargs xdotool type
    fi
}

# shortcuts
type="Alt+1"
clipboard="Alt+2"

main() {
    serial=$1
    accounts=$(ykman --device $serial oath accounts list)

    shortcuts=(
        -kb-custom-1 "$type"
        -kb-custom-2 "$clipboard"
    )
    prompt="YubiKey OATH"
    
    account=$(echo "${accounts/, TOTP/\n}" | rofi -dmenu -i -p "$prompt" ${shortcuts[@]})
    case $? in
        1) exit ;;
        10) command=type ;;
        11) command=clipboard ;;
        *) command=$default_command ;;
    esac

    notify "Touch your YubiKey to generate TOTP for $account"
    code=$(ykman --device $serial oath accounts code "$account")
    IFS=', ' read -r -a code <<< "$code"

    case $command in
        clipboard) echo -n "${code[-1]}" | clipboard; notify "Code copied to clipboard";;
        type) echo -n "${code[-1]}" | type; notify "Code generated";;
    esac
}

default_command="${1:-clipboard}"

case $default_command in
    clipboard|type) ;;
    *) print_usage; exit 1;;
esac

serial=$(choose_yubikey)
case $? in
    1) exit 1 ;;
    2) exit ;;
esac
main $serial
